{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xd6605fD35766f0C4b7347d3754e65fF0Da70f815",
    "txHash": "0x924cccaab1471067bfc7502148b87f0ccf455e8c390ef12e298ba7a5314527ce"
  },
  "proxies": [
    {
      "address": "0x9C1C1A76c3576AD0776931F3b9865aCd755318F5",
      "txHash": "0x44b7d42a850e8dc5caf7ace8f1167a97bb5e8ac195fe8d5fe002484a25b13f1e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "fdb5eaf9e2d0f52361ea022bd84fd0600d5a2424de4f16a51ccad91da4ce2eba": {
      "address": "0x36f841bACF578aC02060C029A07cc6c2FF5a6faD",
      "txHash": "0xac515e01be3af28f346de0329bbe5d83ea5775e3ec3897f1038290257f763d49",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "cycle",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "AWARD",
            "src": "contracts\\AWARD.sol:9"
          },
          {
            "label": "awardRankSize",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "AWARD",
            "src": "contracts\\AWARD.sol:10"
          },
          {
            "label": "cycleAwardBlockNumber",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "AWARD",
            "src": "contracts\\AWARD.sol:11"
          },
          {
            "label": "startAwardBlockNumber",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "AWARD",
            "src": "contracts\\AWARD.sol:12"
          },
          {
            "label": "awardMap",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "AWARD",
            "src": "contracts\\AWARD.sol:13"
          },
          {
            "label": "rankMap",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "AWARD",
            "src": "contracts\\AWARD.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
